name: DB Standard Workflow

on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [ exec-workflow ]
    branches: master

jobs:
  Checkout-Compile-Build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set-Up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache Maven Packages to Speed-Up Build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 

    - name: Run Build
      run: mvn clean package
  
  UnitTests-MutationTests-Sonar:
    runs-on: ubuntu-latest
    
    steps:
    - name: Run Unit Test
      run: mvn test
      
    - name: Run Mutation Test
      run: mvn org.pitest:pitest-maven:mutationCoverage
      
  Containerize-ArtifactoryPush:
    runs-on: ubuntu-latest
    
    steps:
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: target

    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: artifact
        
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v1
      env:
        JF_ARTIFACTORY_SERVER: ${{ secrets.JF_ARTIFACTORY_SERVER_1 }}
    
    - name: Upload binaries
      run: |
        mkdir artifacts
        echo "Hello" >> artifacts/readme.txt
        jfrog rt u "artifacts/" example-repo-local

    - name: Download binaries
      run: |
        mkdir downloaded
        jfrog rt dl example-repo-local downloaded/
        ls downloaded
        
    - if: always()
      name: Xray Scan
      run: | 
       jfrog rt bs
